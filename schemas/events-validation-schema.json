{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Schéma de validation pour les Événements",
    "type": "object",
    "description": "Structure de validation pour les publications de type Événement",
    "required": [
      "title",
      "description",
      "eventDate",
      "startTime", 
      "endTime",
      "targetResidences",
      "status",
      "publicationDate",
      "createdAt",
      "createdBy"
    ],
    "properties": {
      "id": {
        "type": "integer",
        "minimum": 1
      },
      "title": {
        "type": "string",
        "description": "Nom de l'événement",
        "minLength": 3,
        "maxLength": 200,
        "example": "Assemblée générale, Fête des voisins..."
      },
      "description": {
        "type": "string",
        "description": "Description HTML de l'événement (WYSIWYG)",
        "minLength": 10,
        "maxLength": 5000,
        "contentType": "text/html"
      },
      "eventDate": {
        "type": "string",
        "format": "date",
        "description": "Date de l'événement (YYYY-MM-DD)",
        "validation": "Ne peut pas être dans le passé lors de la création"
      },
      "startTime": {
        "type": "string",
        "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
        "description": "Heure de début (HH:mm format 24h)",
        "example": "19:00"
      },
      "endTime": {
        "type": "string", 
        "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
        "description": "Heure de fin (HH:mm format 24h)",
        "example": "20:00",
        "validation": "Doit être postérieure à startTime"
      },
      "location": {
        "type": "string",
        "description": "Lieu de l'événement",
        "maxLength": 200,
        "example": "Salle commune, Jardin, Hall d'entrée..."
      },
      "maxParticipants": {
        "type": "integer",
        "description": "Nombre maximum de participants",
        "minimum": 1,
        "maximum": 1000,
        "example": 20
      },
      "hasParticipantLimit": {
        "type": "boolean", 
        "description": "Limiter le nombre de participants",
        "default": false
      },
      "document": {
        "type": "string",
        "description": "Nom du fichier PDF joint",
        "pattern": ".*\\.pdf$",
        "example": "ordre-du-jour-ag-2025.pdf"
      },
      "recurrence": {
        "type": "string",
        "enum": ["none", "daily", "weekly", "monthly"],
        "enumLabels": ["Événement unique", "Répéter tous les X jours", "Répéter chaque semaine", "Répéter chaque mois"],
        "default": "none"
      },
      "recurrenceInterval": {
        "type": "integer",
        "description": "Intervalle de récurrence (en jours)",
        "minimum": 1,
        "maximum": 365,
        "conditionalRequired": ["recurrence != 'none'"]
      },
      "recurrenceEnd": {
        "type": "string",
        "format": "date",
        "description": "Date de fin de récurrence",
        "conditionalRequired": ["recurrence != 'none'"],
        "validation": "Doit être postérieure à eventDate"
      },
      "targetResidences": {
        "type": "array",
        "minItems": 1,
        "items": {
          "type": "string",
          "format": "uuid"
        }
      },
      "targetResidenceNames": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "status": {
        "type": "string",
        "enum": ["Brouillon", "Publié", "Programmé", "Archivé"]
      },
      "publicationDate": {
        "type": "string",
        "format": "date-time"
      },
      "publishLater": {
        "type": "boolean",
        "default": false
      },
      "createdAt": {
        "type": "string",
        "format": "date-time"
      },
      "createdBy": {
        "type": "string"
      },
      "updatedAt": {
        "type": "string",
        "format": "date-time"
      }
    },
    "validationRules": {
      "timeValidation": {
        "endTime": "Doit être postérieure à startTime",
        "eventDate": "Ne peut pas être dans le passé",
        "recurrenceEnd": "Si récurrence, doit être postérieure à eventDate"
      },
      "conditionalFields": {
        "maxParticipants": "Requis si hasParticipantLimit = true",
        "recurrenceInterval": "Requis si recurrence != 'none'",
        "recurrenceEnd": "Requis si recurrence != 'none'"
      }
    }
  }